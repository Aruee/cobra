.CodeMirror {
  .CodeMirror-linewidget {
    overflow: visible;

    block {
      display: inline-block;
    }

    text_fold {
      display: block;
    }

    subgoal {
      margin-left: 1em;
    }

    xml_elem xml_body {
      display: none;
    }

    position {
      display: none;
    }

    delimiter {
      font-family: "MathJax_Math";
    }

    keyword1 {
      color: blue;
      font-weight: bold;
    }

    bound {
      color: green;
    }

    keyword2 {
      color: blue;
    }

    free {
      color: blue;
      font-style: italic;
    }

    var {
      color: darkblue;
      font-style: italic;
    }

    entity {
      font-family: "MathJax_Math";
    }

    tfree {
      font-family: "MathJax_Math";
      font-style: italic;
      color: cadetblue;
    }

    literal {
      color: dodgerblue;
    }

    .error {
      font-family: "MathJax_Main";
      font-size: 66%;
      text-align: left;
      border-left: 5px solid crimson;
      padding-left: 10px;
      background-color: #eee;
      margin: 4px 5px 8px 0;
    }

    .info {
      font-family: "MathJax_Main";
      font-size: 66%;
      text-align: left;
      border-left: 5px solid dodgerblue;
      padding-left: 10px;
      background-color: #eee;
      margin: 4px 5px 8px 0;
      &.pre {
        white-space: pre;
      }
    }

    .warning {
      font-family: "MathJax_Main";
      font-size: 66%;
      text-align: left;
      border-left: 5px solid darkorange;
      padding-left: 10px;
      margin: 4px 5px 8px 0;
      background-color: #eee;
    }

    .output {
      font-family: "MathJax_Main";
      font-size: 66%;
      text-align: left;
      border-left: 5px solid gray;
      padding-left: 10px;
      margin: 4px 5px 8px 0;
      background-color: #eee;

      &.fragment {
        max-height: 0;
        margin: 0;
        opacity: 0 !important;
        &.visible.all, &.current-fragment {
          max-height: 250px;
          margin: 4px 5px 8px 0;
          opacity: 1 !important;
        }
      }
    }
  }

  span.cm-m-isabelle.delimiter:first-child + span.cm-m-isabelle {
    font-family: "Fira Code";
  }

  span.cm-m-isabelle.delimiter:first-child {
      font-family: "Fira Code";
  }
  span.cm-m-isabelle:first-child {
      font-family: "Fira Code";
  }
  span.cm-m-isabelle {
      font-family: MathJax_Math;
  }

  span.cm-m-isabelle.cm-identifier, span.cm-m-isabelle.cm-ident {
    font-family: "MathJax_Math" !important;
    font-style: italic;
  }

  span.cm-m-isabelle.string, span.cm-m-isabelle.cm-string {
    font-family: "MathJax_Math";
  }

  span.cm-m-isabelle.cm-tfree, span.cm-m-isabelle.cm-free {
    font-family: "MathJax_Math" !important;
  }

  span.cm-m-isabelle.delimiter:not(:first-child) {
    font-family: "MathJax_Math" !important;
  }

  span.cm-m-isabelle.cm-keyword, span.cm-m-isabelle.cm-def {
    font-family: "MathJax_Main" !important;
  }

  span.sup {
    font-size: 66%;
    line-height: 0;
    vertical-align: super;
  }
  span.sub {
    font-size: 66%;
    line-height: 0;
    vertical-align: sub;
  }
  span.bold {
    font-weight: bold;
  }
  .symbol {
    /*font-family: 'AMS', 'Math';*/
  }
  span.cm-operator {

  }
  span.cm-command, span.cm-command {
    color: blue;
    font-weight: bold;
  }
  span.cm-altstring {
    background: rgba(0,0,0,0.05);
  }
  span.cm-verbatim {
    /*background: rgba(0,0,0,0.05);*/
    color: fuchsia;
  }
  span.comment {
    color: fuchsia;
  }
  span.cm-malformed {
    text-decoration: line-through;
  }

  span.command_span {

  }
  span.ignored_span {

  }
  span.malformed_span {

  }
  /* inner syntax */
  span.cm-tfree {
    font-style: italic;
    color: cadetblue;
  }
  span.cm-tvar {
    color: cadetblue;
  }
  span.cm-entity {
    &:hover {
      text-decoration: underline;
    }
  }
  span.cm-free, span.cm-term, span.free, span.term {
    color: blue;
  }
  span.skolem {
    color: #d2691e
  }
  span.bound {
    color: green
  }
  span.var {
    color: darkorange;
  }
  span.numeral {

  }
  span.literal {

  }
  span.delimiter, span.control {
    color: gray;
  }
  span.inner_string {

  }
  span.inner_comment {

  }
  span.token_range {

  }
  span.sort {

  }
  span.typ {

  }
  span.term {

  }
  span.prop {

  }

  span.typing {

  }

  span.attribute {

  }

  span.method {

  }


  /* embedded source text */
  span.ML_source {

  }
  span.doc_source {

  }
  span.antiq {

  }

    /* ML syntax */

  span.ML_keyword {
    color: blue
  }
  span.ML_delimiter {

  }
  span.ML_tvar {

  }
  span.ML_numeral {
    color: red
  }
  span.ML_char {
    color: crimson
  }
  span.ML_string {
    color: crimson
  }
  span.ML_comment {
    color: #8b0000
  }
  span.ML_malform {
    color: #ff6a6a
  }
  span.ML_def {

  }
  span.ML_open {

  }
  span.ML_struct {

  }
  span.ML_typing {

  }

  span.error, span.bad {
    position: relative;
    &:after {
      border: .2em solid #f44336;
      border-top: none;
      border-radius: 1.2em 1em 2em 1.5em;
      bottom: -.3em;
      content: '';
      left: -.2em;
      position: absolute;
      right: -.3em;
      top: -.1em;
      transform: rotate(-1deg);
    }
    &:before {
      border-top: .2em solid #f44336;
      border-radius: .5em;
      content: '';
      height: 1em;
      left: 0;
      position: absolute;
      top: -.3em;
      transform: rotate(-10deg);
      width: 2em;
    }
    /*
    &:after {
      content: "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
      font-family: "Fira Code";
      color: #f44336;
      position: absolute;
      letter-spacing: -0.23em;
      left: 0px;
      top: 0.3em;
      right: 0;
      height: 1em;
      overflow: hidden;
      padding-left: 0.2em;
    }*/
  }

  span.warning {
    position: relative;
    &:after {
      content: "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~";
      font-family: "Fira Code";
      color: orange;
      position: absolute;
      letter-spacing: -0.23em;
      left: 0px;
      top: 0.3em;
      right: 0;
      height: 1em;
      overflow: hidden;
      padding-left: 0.2em;
    }
  }

  span.info, span.writeln {
    background-color: fade(dodgerblue,20%);
  }
}
